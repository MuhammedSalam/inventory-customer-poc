// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
import { __awaiter } from "tslib";
import { BlobService } from "./blobService";
/**
 * @ignore
 */
export class AzureBlob {
    constructor(hostName, connectionString, containerName, blob, blobService) {
        this._containerAndBlobExist = false;
        this._blobPath = blob;
        this._containerName = containerName;
        this._blobService = blobService || BlobService.create(hostName, connectionString);
    }
    ensureContainerAndBlobExist() {
        return __awaiter(this, void 0, void 0, function* () {
            try {
                if (!this._containerAndBlobExist) {
                    yield this._blobService.ensureContainerAndBlobExist(this._containerName, this._blobPath);
                    this._containerAndBlobExist = true;
                }
            }
            catch (err) {
                const msg = `An error occurred while ensuring that the container and blob exists. ` +
                    `It is: \n${err ? err.stack : JSON.stringify(err)}`;
                throw new Error(msg);
            }
        });
    }
    ensureContainerExists() {
        return this._blobService.ensureContainerExists(this._containerName);
    }
    doesContainerExist() {
        return this._blobService.doesContainerExist(this._containerName);
    }
    doesBlobExist() {
        return this._blobService.doesBlobExist(this._containerName, this._blobPath);
    }
    ensureBlobExists(text) {
        return this._blobService.ensureBlobExists(this._containerName, this._blobPath, text);
    }
    renewLease(leaseId, options) {
        return this._blobService.renewLease(this._containerName, this._blobPath, leaseId, options);
    }
    releaseLease(leaseId, options) {
        return this._blobService.releaseLease(this._containerName, this._blobPath, leaseId, options);
    }
    updateContent(text, options) {
        return this._blobService.updateContent(this._containerName, this._blobPath, text, options);
    }
    getContent(options) {
        return this._blobService.getContent(this._containerName, this._blobPath, options);
    }
    changeLease(currentLeaseId, proposedLeaseId) {
        return this._blobService.changeLease(this._containerName, this._blobPath, currentLeaseId, proposedLeaseId);
    }
    getBlobProperties() {
        return this._blobService.getBlobProperties(this._containerName, this._blobPath);
    }
    getBlobMetadata() {
        return this._blobService.getBlobMetadata(this._containerName, this._blobPath);
    }
    setBlobMetadata(metadata, options) {
        return this._blobService.setBlobMetadata(this._containerName, this._blobPath, metadata, options);
    }
    listBlobsSegmented(options) {
        return this._blobService.listBlobsSegmented(this._containerName, options);
    }
    acquireLease(options) {
        return this._blobService.acquireLease(this._containerName, this._blobPath, options);
    }
    deleteBlobIfExists() {
        return this._blobService.deleteBlobIfExists(this._containerName, this._blobPath);
    }
}
//# sourceMappingURL=azureBlob.js.map